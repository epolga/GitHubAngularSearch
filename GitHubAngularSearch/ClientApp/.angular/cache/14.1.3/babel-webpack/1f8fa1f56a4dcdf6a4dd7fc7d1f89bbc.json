{"ast":null,"code":"import { FormControl, FormGroup } from \"@angular/forms\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material\";\n\nfunction HomeComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction HomeComponent_table_6_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelement(6, \"img\", 8);\n    i0.ɵɵtext(7, \"\\\"\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵelement(9, \"button\", 9);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const repo_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(repo_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(repo_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", repo_r3.avatarUrl, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction HomeComponent_table_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 6)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Name\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"tbody\");\n    i0.ɵɵtemplate(8, HomeComponent_table_6_tr_8_Template, 10, 3, \"tr\", 7);\n    i0.ɵɵpipe(9, \"async\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(9, 1, ctx_r1.repos$));\n  }\n}\n\nexport class HomeComponent {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.subject = new BehaviorSubject([]);\n    this.repos$ = this.subject.asObservable();\n    this.form = new FormGroup({\n      searchTerm: new FormControl('')\n    });\n    /*\r\n    http.get<Repo[]>('https://localhost:7204/api/Repos').subscribe(result => {\r\n     this.repos = result;\r\n    }, error => console.error(error));\r\n         */\n  }\n\n  onClick() {\n    console.log('onClick');\n\n    if (this.form.valid) {\n      console.log(this.form.value.searchTerm);\n    }\n\n    const repos$ = this.http.get('https://localhost:7204/api/Repos').subscribe(result => {\n      this.subject.next(result);\n    });\n  }\n\n  onClickRep(id) {\n    alert(id);\n  }\n\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 7,\n  vars: 3,\n  consts: [[1, \"my-form\", \"data-form\", 3, \"formGroup\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"searchTerm\", \"placeholder\", \"Search Term\", \"formControlName\", \"searchTerm\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"click\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"width\", \"50\", \"height\", \"50\", 3, \"src\"], [\"click\", \"onClickRep(repo.Id)\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-form-field\", 1);\n      i0.ɵɵelement(2, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_3_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵtext(4, \"Search\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, HomeComponent_p_5_Template, 3, 0, \"p\", 4);\n      i0.ɵɵtemplate(6, HomeComponent_table_6_Template, 10, 3, \"table\", 5);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", !ctx.repos$);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.repos$);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i4.MatFormField, i5.MatInput, i3.FormGroupDirective, i3.FormControlName, i2.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAWA,SAAQA,WAAR,EAAqBC,SAArB,QAAqC,gBAArC;AAGA,SAASC,eAAT,QAAgC,MAAhC;;;;;;;;;;ICFAC,0BAAmB,CAAnB,EAAmB,IAAnB;IAAuBA;IAAUA;;;;;;IAU7BA,2BAAwC,CAAxC,EAAwC,IAAxC;IACMA;IAAaA;IACjBA;IAAIA;IAAeA;IACnBA;IAAIA;IAAkDA;IAACA;IACvDA;IAAIA;IAA6CA;;;;;IAH7CA;IAAAA;IACAA;IAAAA;IACKA;IAAAA;;;;;;IAXfA,iCAA+E,CAA/E,EAA+E,OAA/E,EAA+E,CAA/E,EAA+E,IAA/E,EAA+E,CAA/E,EAA+E,IAA/E;IAGUA;IAAEA;IACNA;IAAIA;IAAIA;IAGZA;IACEA;;IAMFA;;;;;IANuBA;IAAAA;;;;ADHzB,OAAM,MAAOC,aAAP,CAAoB;EAKxBC,YAAoBC,IAApB,EAAkEC,OAAlE,EAAiF;IAA7D;IAA8C;IAJ1D,eAAU,IAAIL,eAAJ,CAA4B,EAA5B,CAAV;IAER,cAA6B,KAAKM,OAAL,CAAaC,YAAb,EAA7B;IAYA,YAAO,IAAIR,SAAJ,CAAc;MACnBS,UAAU,EAAE,IAAIV,WAAJ,CAAgB,EAAhB;IADO,CAAd,CAAP;IARG;;;;;EAMF;;EAODW,OAAO;IACLC,OAAO,CAACC,GAAR,CAAY,SAAZ;;IACA,IAAI,KAAKC,IAAL,CAAUC,KAAd,EAAqB;MACnBH,OAAO,CAACC,GAAR,CAAY,KAAKC,IAAL,CAAUE,KAAV,CAAgBN,UAA5B;IACD;;IAED,MAAMO,MAAM,GAAG,KAAKX,IAAL,CAAUY,GAAV,CAAsB,kCAAtB,EAA0DC,SAA1D,CACbC,MAAM,IAAG;MACP,KAAKZ,OAAL,CAAaa,IAAb,CAAkBD,MAAlB;IACD,CAHY,CAAf;EAMD;;EACDE,UAAU,CAACC,EAAD,EAAW;IACnBC,KAAK,CAACD,EAAD,CAAL;EACD;;AAnCuB;;;mBAAbnB,eAAaD,0DAKsB,UALtB;AAKgC;;;QAL7CC;EAAaqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCnB1B1B,gCAAmD,CAAnD,EAAmD,gBAAnD,EAAmD,CAAnD;MAGIA;MAEFA;MAEAA;MAAwDA;QAAA,OAAS2B,aAAT;MAAkB,CAAlB;MAAoB3B;MAAMA;MAKpFA;MAEAA;;;;MAdgCA;MAY5BA;MAAAA;MAE6DA;MAAAA","names":["FormControl","FormGroup","BehaviorSubject","i0","HomeComponent","constructor","http","baseUrl","subject","asObservable","searchTerm","onClick","console","log","form","valid","value","repos$","get","subscribe","result","next","onClickRep","id","alert","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Exams\\GinaExam\\GitHubAngularSearch\\GitHubAngularSearch\\ClientApp\\src\\app\\home\\home.component.ts","D:\\Exams\\GinaExam\\GitHubAngularSearch\\GitHubAngularSearch\\ClientApp\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport {\r\n  MatButtonModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatRippleModule,\r\n  MatLabel,\r\n  MatHint,\r\n  MatInput,\r\n  MatButton\r\n} from '@angular/material';\r\nimport {FormControl, FormGroup} from \"@angular/forms\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { BehaviorSubject } from 'rxjs';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n  private subject = new BehaviorSubject<Repo[]>([]);\r\n\r\n  repos$: Observable<Repo[]> = this.subject.asObservable();\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n\r\n     /*\r\n    http.get<Repo[]>('https://localhost:7204/api/Repos').subscribe(result => {\r\n      this.repos = result;\r\n    }, error => console.error(error));\r\n\r\n     */\r\n  }\r\n\r\n  form = new FormGroup({\r\n    searchTerm: new FormControl('')\r\n  })\r\n\r\n\r\n  onClick() {\r\n    console.log('onClick')\r\n    if (this.form.valid) {\r\n      console.log(this.form.value.searchTerm);\r\n    }\r\n\r\n    const repos$ = this.http.get<Repo[]>('https://localhost:7204/api/Repos').subscribe(\r\n      result => {\r\n        this.subject.next(result);\r\n      }\r\n    );\r\n    \r\n  }\r\n  onClickRep(id: string) {\r\n    alert(id);\r\n  }\r\n}\r\ninterface Repo {\r\n  id: string;\r\n  name: string;\r\n  url: string;\r\n  avatarUrl: number;\r\n}\r\n","<form class=\"my-form data-form\" [formGroup]=\"form\">\r\n\r\n  <mat-form-field appearance=\"outline\">\r\n    <input matInput type=\"text\" name=\"searchTerm\" placeholder=\"Search Term\" formControlName=\"searchTerm\">\r\n\r\n  </mat-form-field>\r\n\r\n  <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"onClick()\">Search</button>\r\n\r\n</form>\r\n\r\n\r\n<p *ngIf=\"!repos$\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"repos$\">\r\n  <thead>\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>Name</th>      \r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let repo of repos$ | async\">\r\n      <td>{{ repo.id }}</td>\r\n      <td>{{ repo.name }}</td>\r\n      <td><img src=\"{{repo.avatarUrl}}\" width=50 height=50/>\"</td>\r\n      <td><button click=\"onClickRep(repo.Id)\"></button></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}